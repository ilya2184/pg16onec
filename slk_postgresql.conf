# Ориентируемся железо:
# Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz
# free -h
#                total        used        free      shared  buff/cache   available
# Mem:            31Gi       1,8Gi       575Mi       6,4Gi        28Gi        22Gi
# fio
# WRITE: bw=344MiB/s (361MB/s), 344MiB/s-344MiB/s (361MB/s-361MB/s), io=20.2GiB (21.6GB), run=60002-60002msec

autovacuum_analyze_scale_factor = 0.005 # когда 0.5% изменений - прийти проанализировать
autovacuum_max_workers = 4
autovacuum_naptime = 20s
autovacuum_vacuum_insert_scale_factor = 0.01 # когда 1% insert - прийти собрать статистику (в 1С это - итоги)
autovacuum_vacuum_scale_factor = 0.01 # когда 1% delete/update - прийти почистить
autovacuum_vacuum_cost_delay = 10ms
autovacuum_work_mem = 1GB
bgwriter_delay = 20ms
bgwriter_lru_maxpages = 4000
bgwriter_lru_multiplier = 4.0
checkpoint_completion_target = 0.8 # см. shared_buffers, при заполнении max_wal_size на checkpoint_completion_target выполняется checkpoint
checkpoint_timeout = 15min # см. shared_buffers
commit_delay = 1000
default_statistics_target = 800
default_toast_compression = lz4
effective_cache_size = 16GB # 75% RAM
effective_io_concurrency = 200 # for SSD
escape_string_warning = off
from_collapse_limit = 8
jit = off
join_collapse_limit = 8
listen_addresses = '*'
log_connections = off
log_disconnections = off
log_lock_waits = on
maintenance_work_mem = 2GB
max_connections = 500 # сеансов * 1.5 + 300
max_files_per_process = 10000
max_locks_per_transaction = 256
max_parallel_maintenance_workers = 4 # физ.ядер CPU/4, минимум 2, максимум 6
max_parallel_workers_per_gather = 4
max_wal_size = 4GB # min_wal_size * 2 если в логе перелимит max_wal_size - в логи пишется, нетипичная нагрузка, чекпоинты редко, реплика не забирает WAL-ы
min_wal_size = 2GB # до этого размера движок пытается удалять WAL-ы
online_analyze.enable = on
online_analyze.min_interval = 10000
online_analyze.scale_factor = 0.01
online_analyze.table_type = 'temporary'
online_analyze.threshold = 50
online_analyze.verbose = off
password_encryption = md5
plantuner.fix_empty_table = on
random_page_cost = 1.1 # for NVMe SSD
shared_buffers = 4GB # 25% of RAM, shared_buffers / (checkpoint_timeout * checkpoint_completion_target) = disk speed
shared_preload_libraries = 'online_analyze, plantuner'
standard_conforming_strings = off
synchronous_commit = off
temp_buffers = 32MB # RAM на каждое соединение, после этого - на диск
track_activity_query_size = 100kB # text queries size
unix_socket_directories = '/tmp,/tmp/postgresql/socket'
vacuum_cost_limit = 400 # 100 * autovacuum_max_workers
wal_compression = lz4
work_mem = 32MB # ORDER BY, DISTINCT - все там, если планировщик ошибся и решит в памяти - всё равно в памяти
